replicas: 1

## Create HorizontalPodAutoscaler object for deployment type
#
autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 5
  targetCPU: "60"
  targetMemory: ""
  behavior: {}

# Настройки Ingress
ingress:

  enabled: true

  ingressClassName: nginx

  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: ca-cluster-issuer

  hosts:
    - grafana-alma-k8s2.fillswim.local

  tls:
   - secretName: grafana-tls
     hosts:
       - grafana-alma-k8s2.fillswim.local

resources: {}
#  limits:
#    cpu: 100m
#    memory: 128Mi
#  requests:
#    cpu: 100m
#    memory: 128Mi

## Enable persistence using Persistent Volume Claims
## ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  enabled: false
  type: pvc

  # storageClassName: default
  accessModes:
    # - ReadWriteOnce
    - ReadWriteMany
  size: 10Gi
  # annotations: {}
  finalizers:
    - kubernetes.io/pvc-protection

# Administrator credentials when not using an existing secret (see below)
# adminUser: admin
# adminPassword: password

# Use an existing secret for the admin user.
admin:
  ## Name of the secret. Can be templated.
  existingSecret: "grafana-secret"
  userKey: admin-user
  passwordKey: admin-password

## Define command to be executed at startup by grafana container
## Needed if using `vault-env` to manage secrets (ref: https://banzaicloud.com/blog/inject-secrets-into-pods-vault/)
## Default is "run.sh" as defined in grafana's Dockerfile
command:
- "sh"
- "-c"
- |
  grafana cli admin reset-admin-password $GF_SECURITY_ADMIN_PASSWORD && \
  /run.sh