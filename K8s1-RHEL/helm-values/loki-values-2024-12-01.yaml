deploymentMode: Distributed

loki:
  # Should authentication be enabled
  auth_enabled: false
  # -- Storage config. Providing this will automatically populate all necessary storage configs in the templated config.
  storage:
    # Loki requires a bucket for chunks and the ruler. GEL requires a third bucket for the admin API.
    # Please provide these values if you are using object storage.
    bucketNames:
      chunks: loki-chunks
      ruler: loki-ruler
      admin: loki-admin
    type: s3
    s3:
      s3: http://api.minio.fillswim.local
      endpoint: http://api.minio.fillswim.local

      bucketNames:
        chunks: loki-chunks
        ruler: loki-ruler

      # region: null
      secretAccessKey: "Hiwk-dJFj-bRbB-i65r"
      accessKeyId: "minioadmin"
      # signatureVersion: null
      s3ForcePathStyle: true
      insecure: true
      http_config: {}
      # -- Check https://grafana.com/docs/loki/latest/configure/#s3_storage_config for more info on how to provide a backoff_config
      backoff_config: {}
      disable_dualstack: false

  useTestSchema: false

  schemaConfig:
    configs:
      - from: "2024-04-01"
        store: tsdb
        object_store: s3
        schema: v13
        index:
          prefix: loki_index_
          period: 24h
    # configs:
    #   - from: "2024-04-01"
    #     store: boltdb-shipper
    #     object_store: s3
    #     schema: v13
    #     index:
    #       prefix: loki_index_
    #       period: 24h

  ingester:
    chunk_encoding: snappy
  querier:
    # Default is 4, if you have enough memory and CPU you can increase, reduce if OOMing
    max_concurrent: 4
  pattern_ingester:
    enabled: true
  limits_config:
    allow_structured_metadata: true
    volume_enabled: true
    retention_period: 672h
  compactor:
    retention_enabled: true
    delete_request_store: s3

ingester:
  replicas: 3 # To ensure data durability with replication
querier:
  replicas: 3 # Improve query performance via parallelism
  maxUnavailable: 2
queryFrontend:
  replicas: 2
  maxUnavailable: 1
queryScheduler:
  replicas: 2
distributor:
  replicas: 3
  maxUnavailable: 2
compactor:
  replicas: 1
indexGateway:
  replicas: 2
  maxUnavailable: 1

bloomPlanner:
  replicas: 0
bloomBuilder:
  replicas: 0
bloomGateway:
  replicas: 0

backend:
  replicas: 0
read:
  replicas: 0
write:
  replicas: 0

singleBinary:
  replicas: 0

  # This exposes the Loki gateway so it can be written to and queried externaly
gateway:

  # service:
  #   type: LoadBalancer

  # Gateway ingress configuration
  ingress:
    # -- Specifies whether an ingress for the gateway should be created
    enabled: true
    # -- Ingress Class Name. MAY be required for Kubernetes versions >= 1.18
    ingressClassName: "nginx"
    hosts:
      - host: gateway.loki.fillswim.local
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: loki-gateway-tls
        hosts:
          - gateway.loki.fillswim.local

# Enable minio for storage
minio:
  enabled: false